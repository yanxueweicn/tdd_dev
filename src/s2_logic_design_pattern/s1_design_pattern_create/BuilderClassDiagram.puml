@startuml
skin rose

 class Computer {
    + void InitSetup();
    + void SetupGame();
    + void GameStart();
    ==members==
    - std::vector<std::unique_ptr<Cpu>> cpu_vec_;
    - std::vector<std::unique_ptr<Memory>> memory_vec_;
    - std::vector<std::unique_ptr<HardDisk>> hard_disk_vec_;
    - std::vector<std::unique_ptr<Display>> display_vec_;
    - std::vector<std::unique_ptr<Keyboard>> keyboard_vec_;
}
abstract class Builder {
    virtual void MakeCpu();
    virtual void MakeMemory();
    virtual void MakeHardDisk();
    virtual void MakeDisplay();
    virtual void MakeKeyboard();
    virtual Computer* GetResult();
    virtual std::string to_string();
    virtual void MakeOrderDesc(const std::string &desc);
}
Builder -u-> "1" Computer

class LenovoBuilder extends Builder
class DellBuilder extends Builder
class Director {
    Computer Construct();
}
Director -r-> "1" Builder
Director -u-> "1" Computer

abstract class Cpu
class Intel extends Cpu
class Amd extends Cpu

abstract class Memory
class Samsung extends Memory
class Kingston extends Memory

abstract class HardDisk
class WesternDatabase extends HardDisk
class Seagate extends HardDisk

abstract class Display
class Samsung extends Display
class Philips extends Display

abstract class Keyboard
class Lenovo extends Keyboard
class Logitech extends Keyboard

LenovoBuilder --> "1" Cpu
LenovoBuilder --> "1" Memory
LenovoBuilder --> "1" HardDisk
LenovoBuilder --> "1" Display
LenovoBuilder --> "1" Keyboard

DellBuilder --> "1" Cpu
DellBuilder --> "1" Memory
DellBuilder --> "1" HardDisk
DellBuilder --> "1" Display
DellBuilder --> "1" Keyboard

@enduml